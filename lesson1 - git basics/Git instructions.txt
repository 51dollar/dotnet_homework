# используется для инициализации проекта как репозитория git.
git init

# клонирование репозитория.
git clone <ссылка на репозиторий github + .git в конце>

# отслеживание изменений.
git status

# настройка пользователя git.
git config --global user.name <имя пользователя>
git config --global user.email <email>

# история коммитов. 
git log

# добавить все файлы.
git add .
# добавить конкретный файл.
git add <имя файла + расширение>

# создать коммит (-m позволяет написать сообщение коммита без редактора).
git commit -m '<текст коммита>'

# пушит закоммиченные файлы в удаленный репозиторий.
git push
# пушит в определенную ветку.
git push -u origin develop

# позволяет сбросить состояние проекта до нужного коммита.
git reset <хэш коммита>
# Эта команда удалит все изменения, внесенные вами в ваш локальный репозиторий,
# и обновит его до последней версии, которая была закоммичена на GitHub.
git reset -- hard HEAD

# скачает изменения с удаленного репозитория без приминения к нам.
git fetch
# скачает и применит изменения с удаленного репозитория.
git pull

# показывает в какой ветке находитесь.
git branch
# показывает все ветки в удаленном репозитории.
git branch -a

# переключение на ветку.
git checkout <название ветки>

# обьединение двух веток.
git merge
# для снияния с main (перед этим нужно быть на ветке main).
git merge develop

# отмена слияния коммита (применяется когда слияние не удалось).
# если смерджить не получилось, появится надпись (master|merging) или что-то в этом роде. 
git merge -- abort

# используется для удаления неотслеживаемых файлов из  вашего локального репозитория.
git clean -f
# используется для удаления неотслеживаемых директорий в вашем локальном репозитории.
git clean -d
# их можно совместить.
git clean -fd